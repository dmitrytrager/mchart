# Name of your application. Used to uniquely configure containers.
service: mchart

# Name of the container image.
image: dmitrytrager/open-gamer

# Deploy to these servers.
web:
    hosts:
      - "3.76.214.98" # Lightsail Ubuntu-22
    # cmd: "./bin/rails server"
  sidekiq:
    hosts:
      - "3.76.214.98" # Lightsail Ubuntu-22
    cmd: "bin/sidekiq -C config/sidekiq.yml -v"

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: dmitrytrager

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD
# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    DOCKER_DEFAULT_PLATFORM: linux/x86_64
    RAILS_LOG_TO_STDOUT: 1
    RAILS_SERVE_STATIC_FILES: 1
    RAILS_ENV: production
    PG_HOST: localhost # 3.76.214.98
    POSTGRES_USER: mchart
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD
    # - DATABASE_URL
    - REDIS_URL

# Use a different ssh user than root
ssh:
  user: deployer

# Configure builder setup.
builder:
  args:
    RUBY_VERSION: 3.2.2
    RAILS_ENV: production
  multiarch: false
  secrets:
    - RAILS_MASTER_KEY
  # remote:
  #   arch: amd64
  #   host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: postgres:14.8
    host: 3.76.214.98
    port: 5432
    env:
      clear:
        POSTGRES_USER: mchart
        POSTGRES_DB: mchart_production
      secret:
        - POSTGRES_PASSWORD
    directories:
      - data:/var/lib/postgresql/data
  redis:
    image: redis:latest
    host: 3.76.214.98
    port: 6379
    directories:
      - data:/data
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
healthcheck:
  path: /health
  port: 3000

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2
